// NOTE This file is auto-generated by Contentlayer

import type {
  Markdown,
  MDX,
  ImageFieldData,
  IsoDateTimeString,
} from "contentlayer/core";
import * as Local from "contentlayer/source-files";

export { isType } from "contentlayer/client";

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString };

/** Document types */
export type MiniProject = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "MiniProject";
  title: string;
  featuredImageLight?: string | undefined;
  featuredImageDark?: string | undefined;
  figmaLink?: string | undefined;
  githubLink?: string | undefined;
  externalLink?: string | undefined;
  isPublished: boolean;
  publishedOn?: IsoDateTimeString | undefined;
  updatedOn?: IsoDateTimeString | undefined;
  tags: string[];
  techStack: string[];
  /** MDX file body */
  body: MDX;
  slug: string;
  slugAsParams: string;
};

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Project";
  title: string;
  featuredImageLight?: string | undefined;
  featuredImageDark?: string | undefined;
  figmaLink?: string | undefined;
  githubLink?: string | undefined;
  externalLink?: string | undefined;
  isPublished: boolean;
  publishedOn?: IsoDateTimeString | undefined;
  updatedOn?: IsoDateTimeString | undefined;
  tags: string[];
  techStack: string[];
  description: string;
  shouldAddFeaturedImageShadow: boolean;
  bgColorLight?: string | undefined;
  bgColorDark?: string | undefined;
  featuredTechStack?: string[] | undefined;
  /** MDX file body */
  body: MDX;
  slug: string;
  slugAsParams: string;
};

/** Nested types */

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes;
export type AllTypeNames = DocumentTypeNames | NestedTypeNames;

export type DocumentTypes = MiniProject | Project;
export type DocumentTypeNames = "MiniProject" | "Project";

export type NestedTypes = never;
export type NestedTypeNames = never;

export type DataExports = {
  allDocuments: DocumentTypes[];
  allMiniProjects: MiniProject[];
  allProjects: Project[];
};

export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes;
  documentTypeMap: DocumentTypeMap;
  documentTypeNames: DocumentTypeNames;
  nestedTypes: NestedTypes;
  nestedTypeMap: NestedTypeMap;
  nestedTypeNames: NestedTypeNames;
  allTypeNames: AllTypeNames;
  dataExports: DataExports;
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  MiniProject: MiniProject;
  Project: Project;
};

export type NestedTypeMap = {};
